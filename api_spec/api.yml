swagger: "2.0"
info:
  description: "This is the API for GH Robber project"
  version: "1.0.0"
  title: "GH Robber"
tags:
- name: "Github Users"
  description: "Everything about GH Users"
- name: "Repositories"
  description: "Access to GH Repositories"
- name: "Application Users"
  description: "Operations about application user"
schemes:
- "https"
- "http"
paths:
  /github-users/{id}:
    get:
        tags:
        - "Github Users"
        summary: "Gets github user by ID"
        operationId: "getGithubUser"
        produces:
        - "application/json"
        parameters:
        - name: "id"
          in: "path"
          description: "ID of the repository to return"
          required: true
          type: "string"
        responses:
          "200":
            description: "successful operation"
            schema:
              type: "array"
              items:
                $ref: "#/definitions/GHUser"
          "500":
            description: "Internal server error"
        security:
        - gh_robber_auth:
          - "read:gh-users"
  /github-users:
    post:
      tags:
      - "Github Users"
      summary: "Find GH Users by criteria"
      description: ""
      operationId: "findGHUsers"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Object that holds the criteria for search"
        required: true
        schema:
          $ref: "#/definitions/GHUserSearchCriteria"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GHUser"
        "405":
          description: "Invalid input"
      security:
      - gh_robber_auth:
        - "read:gh-users"
  /repositories/{id}:
    get:
        tags:
        - "Repositories"
        summary: "Get repository by ID"
        operationId: "getRepositoryById"
        produces:
        - "application/json"
        parameters:
        - name: "id"
          in: "path"
          description: "ID of the repository to return"
          required: true
          type: "string"
        responses:
          "200":
            description: "successful operation"
            schema:
              type: "array"
              items:
                $ref: "#/definitions/Repository"
          "500":
            description: "Internal server error"
        security:
        - gh_robber_auth:
          - "read:repositories"
  /repositories:
    post:
      tags:
      - "Repositories"
      summary: "Find GH Repositories by criteria"
      description: ""
      operationId: "findRepositories"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Object that holds the criteria for search"
        required: true
        schema:
          $ref: "#/definitions/RepositorySearchCriteria"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Repository"
        "405":
          description: "Invalid input"
      security:
      - gh_robber_auth:
        - "read:repositories"

  /user/{username}:
    get:
      tags:
      - "Application Users"
      summary: "Get user by user name"
      description: ""
      operationId: "getUserByName"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "path"
        description: "The name that needs to be fetched."
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/User"
        "400":
          description: "Invalid username supplied"
        "404":
          description: "User not found"
    put:
      tags:
      - "Application Users"
      summary: "Updated user"
      description: "This can only be done by the logged in user."
      operationId: "updateUser"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "username"
        in: "path"
        description: "name that need to be updated"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Updated user object"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        "400":
          description: "Invalid user supplied"
        "404":
          description: "User not found"
securityDefinitions:
  gh_robber_auth:
    type: "oauth2"
    authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      read:gh-users: "Read GH Users"
      read:user: "Read application users"
      read:repositories: "Read repositories"
definitions:

  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      userStatus:
        type: "integer"
        format: "int32"
        description: "User Status"

  GHUser:
    type: "object"
    properties:
      username:
        type: "string"
      repositoriesCount:
        type: "integer"
        format: "int32"
    required:
      - username
  GHUserSearchCriteria:
    type: "object"
    properties:
      username: 
        type: "string"
        description: "Use * as a wildcard operator"
      repositoriesCountMin:
        type: "integer"
        format: "int32"
      repositoriesCountMax:
        type: "integer"
        format: "int32"
      offset:
        type: "integer"
        format: "int32"
        description: "Offset the results (for pagination)"
      resultsNum:
        type: "integer"
        format: "int32"
        description: "How many results to fetch"
  Repository:
    type: "object"
    properties:
      name:
        type: "string"
      technology:
        type: "array"
        items: 
          type: "string"
      stars:
        type: "integer"
        format: "int32"
    required:
      - name
      - technology
      - stars
  RepositorySearchCriteria:
    type: "object"
    properties:
      name:
        type: "string"
        description: "Use * as a wildcard operator"
      technology:
        type: "array"
        items: 
          type: "string"
      starsMin:
        type: "integer"
        format: "int32"
      starsMax:
        type: "integer"
        format: "int32"
      offset:
        type: "integer"
        format: "int32"
        description: "Offset the results (for pagination)"
      resultsNum:
        type: "integer"
        format: "int32"
        description: "How many results to fetch"
      
externalDocs:
  description: "Find out more about the project"
  url: "https://github.com/Clanhouse/gh-robber"